name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build-test:
    name: ${{ matrix.os }} • Py${{ matrix.python }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python: ["3.10", "3.11"]

    steps:
    # ── 1. Checkout repo ──────────────────────────────────────────────
    - name: Checkout
      uses: actions/checkout@v4

    # ── 2. Set up the requested Python version ────────────────────────
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python }}
        cache: "pip"

    # ── 3. Install runtime + dev dependencies ────────────────────────
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt -r dev-requirements.txt
        # Install IOC-Inspector in editable mode
        pip install -e .

    # ── 4. Run unit tests with coverage ───────────────────────────────
    - name: Run pytest
      run: |
        pytest --cov=ioc_inspector_core \
               --cov-report=xml \
               --cov-report=term

    # ── 5. Enforce minimum coverage (80 %)  ───────────────────────────
    - name: Enforce 80 % coverage
      run: |
        python - <<'PY'
        import sys, xml.etree.ElementTree as ET, pathlib
        pct = float(ET.parse("coverage.xml").getroot().attrib["line-rate"]) * 100
        print(f"Line coverage: {pct:.1f}%")
        sys.exit(0 if pct >= 80 else 1)
        PY

    # ── 6. End-to-end CLI smoke test ─────────────────────────────────
    - name: End-to-end CLI test
      env:
        VT_API_KEY: ${{ secrets.VT_API_KEY }}
        ABUSEIPDB_API_KEY: ${{ secrets.ABUSEIPDB_API_KEY }}
      run: |
        python main.py --file examples/test.pdf --report --quiet
        test -f reports/test_report.md  # verify report created
